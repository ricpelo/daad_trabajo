



     User's Manual for the ARJ archiver program,            July 1991



	ARJ software and manual copyright (c) 1990,91 by Robert K Jung.
	All rights reserved.

	ARJ version 2.20 release




     ** IMPORTANT NEWS ****************************************************

	Users of ARJ should read the WHATSNEW.DOC and UPDATE.DOC which
	contain information about the latest improvements to ARJ.

     **********************************************************************




     TOPICS COVERED IN THIS DOCUMENT
     -------------------------------

     INTRODUCTION
     TERMINOLOGY
     MAJOR FEATURES OF ARJ
     ARCHIVER BENCHMARKING
     RELEASE NOTES
     ARJR AND DEARJ PROGRAMS
     GETTING STARTED
     QUICK START TO USING ARJ
     HOW TO CREATE AN EXECUTABLE SELF-EXTRACTING ARJ ARCHIVE
     CONVERTING OTHER ARCHIVE FILES TO ARJ FORMAT
     HOW TO USE ARJ
     ARJ LIMITATIONS
     DIFFERENCES BETWEEN ARJ AND LHARC
     IMPORTANT NOTES
     THE FILESPEC "..."
     ARJ ERROR SITUATIONS
     ARJ DOS ERRORLEVELS
     ARJ USER ACTION PROMPTS
     ARJ ENVIRONMENT VARIABLE
     ARJ COMMAND LINE SYNTAX
     ARJ COMMANDS
     ARJ SWITCH OPTIONS
     ARJ_SECURITY ENVELOPE
     KNOWN ARJ ISSUES/PROBLEMS
     ARJ TECHNICAL SUPPORT
     ARJ AVAILABILITY
     DISTRIBUTORS
     ACKNOWLEDGEMENTS
     USAGE AND DISTRIBUTION POLICY
     FINAL COMMENTS




     INTRODUCTION:

	ARJ is the result of my desire to use my interest in compression
	technology to produce an archiver for personal use on my PC and on
	minicomputers that provides power and excellent flexibility.

	ARJ is prototyped in ANSI C and only uses ANSI C standard
	libraries.  All machine dependent functions (file date-time
	modified, file attributes, etc.) are contained in a single
	environment source file using #ifdefs to enable one to maintain a
	single version of the source code for multiple different machines.

	The MS-DOS production version of ARJ has manually optimized
	compression, extraction, CRC, and output routines (in assembler).

	The current functionality of ARJ is patterned after that of AR and
	LHARC with additional features derived from those of the
	competition and from the many suggestions of ARJ users.

	I have created a new archive format for ARJ to support cross
	platform archives, multiple volume archives, and a new security
	envelope feature.  Trying to maintain compatibility with existing
	formats is very difficult.  Some users have wondered why I did not
	choose to use the ZIP format.  That might have been possible, but
	ZIP utilities would still be unable to extract the compressed data,
	because the compressed data is itself a new format.

	In addition, there are plans to port versions of ARJ to other
	platforms in the coming year.  These plans all depend upon user
	support of ARJ.


     TERMINOLOGY:

	The following terms are used through this manual.

	ARCHIVE - This is a file containing one or more files in a
	compressed or non-compressed state and containing file related
	information such as filename and date-time last modified, etc.

	ARJ FILE - This is an archive created by ARJ.

	COMPRESSION - The process of encoding redundant information into
	data requiring less storage space.

	COMPRESSION PERCENTAGE/RATIO - The percentage compression reported
	by ARJ is a variation of one of the TWO standard methods of
	expressing compression ratio in the technical literature.  ARJ uses
	the compressed size / original size ratio.  The other method is the
	inverse ratio.	When ARJ reports 96% as the compression ratio, that
	means that the compressed file is 96 percent of the original size
	(very little compression).  Other archivers use their own methods.
	LHARC uses the same ratio as ARJ.

	EXTRACTION or UNCOMPRESSION - The processing of recreating the
	exact information that was previously compressed.

	SELF-EXTRACTION MODULE (SFX) - This is an archive that is an
	executable file that is capable of extracting self-contained files.

	TEXT MODE - In text mode, ARJ inputs the file using the C library
	text mode which translates the carriage return, linefeed control
	characters of MS-DOS to a single linefeed character.  This saves
	space and provides the option for cross platform file extraction.
	On another platform, the host C library would change the single
	linefeed to the host text newline separator sequence.  In addition,
	for platforms such as PRIMOS which set bit 8 in ASCII text
	characters, ARJ sets/resets bit 8 according to the platform
	extracted to.  All input is stripped to 7-bit ASCII.

	VOLUMES - These are ARJ archives that are in sequence and have been
	created by a single ARJ command.  Files in the volumes may span
	volumes in a split format.  These volumes are usable archives.


     MAJOR FEATURES OF ARJ:

	Currently ranks as the best in compression in terms of size
	reduction of the currently available archivers including PKZIP
	1.10, PAK 2.51, LHARC 1.13c, and LHA 2.12.  Users have reported
	that ARJ also compresses slightly better than ARC 7.00.  ARJ is
	particularly effective with database files, graphics files, and
	large documents.  With the "-jm" or "-jm1" option, ARJ usually
	compresses even smaller at a cost of time.

	Archive and individual file comments with option of inputting
	comments from a file.

	32 bit CRC file integrity check.

	DOS volume label support.

	Empty directory support.

	Test new archive before overwriting the original archive option.

	Multiple volume archives with one ARJ command.	This allows the
	user to backup a full hard disk drive to multiple floppies.
	Recovery of individual files is convenient because each volume
	is an individual archive except for split files.  No need to use
	SLICE with ARJ.

	File re-ordering facility with the option of sorting by file size,
	file extension, CRC value, date-time modified, filename, pathname,
	compression ratio, file attribute and more.

	String searching with context display within archive files.

	Built-in facility to recover files from broken archives.

	Self-extraction feature that is internal to the ARJ runfile.  The
	SFX module is full-featured with a built-in help screen.

	Internal string data integrity check in ARJ to resist hacking a la
	LHARC to ICE.

	Archive security envelope feature to resist tampering with secured
	archives.  This feature disallows ANY changes to a secured archive.
	Not even comments can be changed.

	Password option to encrypt archived files.

	Text mode data compression option to enable movement of text files
	from one host machine to another.  Text mode also results in
	slightly greater file size reduction on MS-DOS machines.

	File extraction to screen in a paged mode to permit browsing
	through an archive.

	Specification of the files to be added to an archive via one or
	more list files.  In addition, ARJ can generate a list file.

	Specification of files to be excluded from processing by ARJ.

	Sub-directory recursion during compression and extraction.


     ARCHIVER BENCHMARKING:

	This is information for those who plan to publish benchmark test
	results comparing ARJ with other file archivers.

	The ARJ -jm1 -m1 compression is intended to demonstrate the best
	that ARJ can do in terms of size reduction.  The ARJ -m1 (default)
	compression is intended to compete with LHA 2.12.  The ARJ -m2
	compression is intended to compete with PKZIP 1.10.  The ARJ -m4 is
	provided as a very fast compression method suitable for use in disk
	backups.

	The ARJ -e option is necessary during size benchmarks because ARJ
	by default stores the entire specified pathname in the archive as
	opposed to other archivers which strip path specs.

	The very size of the ARJ runfile adds significantly to the
	compression and extraction times when testing smaller archives.  It
	would be fairer to use larger archives or run the archivers from a
	RAMDISK.  Also, compressed executables affect the test times, so
	that all archivers should be tested in uncompressed form.

	The ARJ comment header adds bytes to the size of an ARJ archive.
	The larger file headers also add bytes to the size of an ARJ
	archive.  So, in size benchmarks compressing a large number of
	small files, the header size difference will be evident.


     RELEASE NOTES:

	The only difference between the registered version and the
	shareware version is the version/copyright message.

	This release states that it is NOT for commercial use.	Commercial,
	institutional and government users must purchase a site license to
	obtain a registered version of ARJ for their use.  However,
	commercial, institutional and government users may use ARJ for
	evaluation purposes for a period of 30 days.  See the LICENSE.DOC
	for details.

	While evaluating ARJ, you should use the "-jt" (test archive)
	option to verify new ARJ archives of your data.

	This version has been tested under DOS 2.11, 3.3, and 4.01.  It has
	been lightly tested under DOS 5.0.

	The executables ARJ.EXE and REARJ.EXE can be compressed by DIET,
	LZEXE, and PKLITE (not PKLITE 1.05).

	Here is a suggested command that will test ARJ on all of your files:

	ARJ a -r -jt -y "-vasdel a:\vol.*" a:\vol c:\*.*


     ARJR AND DEARJ PROGRAMS:

	The new programs ARJR and DEARJ are available only to registered
	users of ARJ.  ARJR is the ARJ program minus the help screen and
	SFX modules.  DEARJ is the ARJR program minus the archive
	creation/modification functions.  See the LICENSE.DOC and
	ORDERFRM.DOC for more information.

	UNARJ and DEARJ are NOT the same program.


     GETTING STARTED:

	I assume that you have a copy of the self-extracting ARJ module
	named ARJ220.EXE.  Typing ARJ220 [RETURN] at the DOS command prompt
	will initiate the self-extraction feature.  ARJ220 will by default
	extract its files to the current directory.  When ARJ220 starts,
	you will see several lines of text describing ARJ and then a line
	asking if you wish to continue extraction.  Entering "yes" or "y"
	will continue the extraction.  If there are any duplicate filenames
	in the current directory, the program will prompt you for
	overwriting.  You can say "yes", "no", or "quit".

	Only the extracted ARJ.EXE file needs to be copied to a directory
	named in your "PATH" command in your autoexec.bat file.  On many
	PCs, this directory may be C:\DOS or C:\BIN.  With MS-DOS 3.0 and
	above, you can use path notation "\BIN\ARJ e archive" to use ARJ.

	You may, of course, prefer to use ARJ 0.15, 0.20, or higher to
	extract the contents of ARJ220.EXE file manually.

	Example:  ARJ e ARJ220.EXE \temp\


     QUICK START TO USING ARJ:

	Please note that switch options may be placed anywhere in the
	command line.

	To create an ARJ archive containing all of the files in the
	current directory:

	ARJ a archive

	To create an ARJ archive containing all files with the ".DOC"
	extension in the current directory:

	ARJ a archive *.DOC

	To create an ARJ archive containing all of the files in the
	named directory and all files in subdirectories of the named
	directory:

	ARJ a -r archive named_directory\*.*

	To create an archive containing files without path specs:

	ARJ a -e archive named_directory\*.*

	For maximum compression, use the "-jm" or "-jm1" options.
	For better speed, use the -m2 option.

	ARJ a -r -jm archive named_directory\*.*
	ARJ a -r -m2 archive named_directory\*.*

	To create an ARJ archive containing the full specified pathnames
	of the stored files including any drive and root specs.

	ARJ a -r -jf archive C:\top_directory\*.*

	To backup your hard disk to multiple volume archives on drive A
	with archive testing and archive bit resetting:

	ARJ a -r -jf -jt -a1 -b2 -vvas A:backup C:\*.*

	To extract all of the files in an archive to the current
	directory:

	ARJ e archive

	To extract all of the files in an archive to a named directory:

	ARJ e archive named_directory\

	To extract all files with the ".DOC" extension to the current
	directory:

	ARJ e archive *.DOC

	To extract all of the files in an archive recreating the
	original directory structure:

	ARJ x archive original_directory_name\

	The ending "\" character is optional.

	To extract all of the files in an archive containing absolute
	pathnames to the original paths:

	ARJ x -jf archive

	To list all of the files in an archive:

	ARJ l archive


     HOW TO CREATE AN EXECUTABLE SELF-EXTRACTING ARJ ARCHIVE

	The command "ARJ f -je archive ..." will create a full featured
	self-extracting archive from an already built archive.	No error
	message will be displayed concerning not finding "...".

	The command "ARJ f -je1 archive ..." will create a smaller
	self-extracting archive.

	Syntax:  ARJ f -je archive ...	    produces archive.exe

	Under DOS systems other than 2.11, 3.2, 3.3, 4,0, you may have to
	rename the self-extract module to ARJSFX.EXE to do the extraction.

	See the "-je" option for more information.


     CONVERTING OTHER ARCHIVE FILES TO ARJ FORMAT

	Included with this software is the program REARJ.  This program can
	be used to individually or collectively convert archive files from
	other formats to the ARJ format.

	REARJ *.ZIP *.ARC *.LZH    will convert all ZIP, ARC, and LZH
	archives in the current directory to the ARJ format.  See the
	REARJ.DOC for more information about REARJ.


     HOW TO USE ARJ:

	If you type ARJ [return], you will see a simple help screen.

	If you type ARJ -? [return], you will see more detailed help
	information.


     ARJ LIMITATIONS:

	ARJ will accept up to:	  64 filenames/wildnames on command line
			       16000 filenames resulting from wildnames
				8000 filenames/wildnames to exclude
				8000 ARJ filenames resulting from wildnames
				2048 character comments
				     (up to 25 lines or 1 file)

	For compressing, ARJ requires approximately 282,000 bytes plus the
	memory necessary to store all of the pathnames to be archived when
	using the default compression method (-m1).

	For extracting, ARJ requires approximately 166,000 bytes plus.
	The program DEARJ (available to registered users) requires
	approximately 123,000 bytes plus.

	There is no limitation on the number of files that can be stored in
	one archive.  However, each add command can only add a maximum of
	16000 files at a time depending upon memory availability.  I expect
	that a normal maximum of 5000 to 8000 filenames can be handled
	without running out of memory during the compress phase.

	If you do not have enough memory, you should use the "-l" switch to
	dump the filenames to a list file.  You can then break the list
	file into smaller files and use multiple ARJ commands to archive
	all of the files.

	Example:

	   ARJ a -r -lname.lst archive \*.*

	   If the above command fails due to lack of memory, split the
	   name.lst file into smaller pieces named name1.lst, name2.lst,
	   etc.  Then execute:

	   ARJ a archive !name1.lst
	   ARJ a archive !name2.lst
	   .
	   .

	ARJ currently does NOT differentiate between wildnames like "C:*.*"
	and "C:\*.*".  ARJ would expand each of those two wildnames into a
	list that could be up to twice as long as necessary.

	When updating an archive, ARJ creates a temporary file named
	ARJTEMP.$nn in the current directory or work directory.

	While ARJ is scanning a wildcard filespec, ARJ will change the name
	of the target archive to ARJTEMP.$nn while the scan is proceeding
	to avoid including the archive itself in an add or move command.
	Also, as a result, you cannot add a file named ARJTEMP.$nn to an
	ARJ archive.  Please note that the name of this temporary file may
	change at a future revision of ARJ.


     DIFFERENCES BETWEEN ARJ AND LHARC:

	The archive formats are NOT compatible.

	The compression and decompression algorithms are NOT compatible.

	ARJ only supports its own archive format.

	ARJ by default stores the full specified pathname of files
	archived minus any drive letter and root symbol.

	The "e" and "x" commands will by default extract all of the files
	in the archive without using date time stamps to select files.	You
	should specify "-u -y" to duplicate LHARC functionality.

	The "f" command in ARJ requires the -r switch to be identical to
	the LHARC f command.

	The ARJ archive suffix is ".ARJ".

	ARJ does NOT sort filenames when archiving.


     IMPORTANT NOTES:

	When using the "-w" working directory switch, ARJ does not check on
	space availability before overwriting the original archive if it
	exists.  Be sure that you have enough disk space for the new
	archive before using the "-w" switch.  If ARJ aborts in this
	situation because of disk space, ARJ will keep the temporary
	archive.

	By default, ARJ does not see hidden or system files.  ARJ will
	process system and hidden files when you either specify the "-a"
	switch.

	Like LHARC and PKZIP, ARJ requires extra disk space to UPDATE an
	archive file.  ARJ will backup the original archive while it
	creates the new archive, so enough room must be available for both
	archives at the same time.

	Currently, ARJ will not extract to a readonly file.


     THE FILESPEC "..."

	Several times in this document and the UPDATE.DOC file, there is
	mention of the filespec "...".	 This filespec is chosen so as to
	not match any existing filename.  ARJ will NOT generate an error or
	warning for not matching "..." specifically.


     ARJ ERROR SITUATIONS:

	ADD:

	If a user specified file is not found during an add, ARJ will
	continue processing, and will keep the archive and terminate with
	an error condition.

	In a disk full condition or any other file i/o error, ARJ will
	promptly terminate with an error condition and delete the temporary
	archive file unless the user has specified the "-jk" switch.


	MOVE:

	ARJ will only delete files that have been successfully added to the
	archive.  If you have specified the "-jt" (test) switch, ARJ will
	abort on any error.  If you specify the "-jk" switch, ARJ will not
	delete the temporary archive upon an abort.


	EXTRACT:

	In a disk full condition or any other file i/o error, ARJ will
	promptly terminate with an error condition and delete the current
	output file.


     ARJ DOS ERRORLEVELS:

	0 ->   success
	1 ->   warning (specified file to add to archive not found or
			specified file to list, extract, etc., not found)
	2 ->   fatal error
	3 ->   CRC error (header or file CRC error)
	4 ->   ARJ-SECURITY error or attempt to update an ARJ-SECURED archive
	5 ->   disk full or write error
	6 ->   can't open archive or file
	7 ->   simple user error (bad parameters)
	8 ->   not enough memory


     ARJ USER ACTION PROMPTS:

	ARJ prompts the user for action at certain times.  There are
	several types of prompts.  One is for yes/no permission, another is
	for a new filename, another is for archive comments, and one other
	is for search strings.	The yes/no prompts will also accept "quit"
	for program termination and "always" to bypass further user
	prompts.

	Since ARJ uses STDIN for user input, be careful about typing ahead
	anticipating prompts.  ARJ may prompt you for an unexpected action
	and use your earlier input.

	The "-jy" option lets you change the prompting modes to single
	character query mode.  See the section on "-jy" for more
	information.


     ARJ ENVIRONMENT VARIABLE:

	ARJ will first look for an environment variable named ARJ_SW and
	use its value as switch options for ARJ.  If ARJ finds such an
	environment variable, it will display a message to that effect.

	SET ARJ_SW=<switches>

	Example:  SET ARJ_SW=-w\temp -k -e

	Do NOT add any blanks after the variable name ARJ_SW.  As in LHARC,
	command line switches can be selected to override ARJ_SW settings.

	ARJ will allow you to use a different switch character "-" or "/"
	in ARJ_SW and in the command line except when using the "-ju"
	(unix) option.

	If the ARJ_SW environment variable specifies a filename (text not
	beginning with a switch character), ARJ will open that filename and
	scan it looking for a line of text that begins in column 1 with the
	same letter as the ARJ command being executed.	The following text
	is processed as the ARJ_SW switches.  This allows each ARJ command
	to have its own switch settings.  If no such command text is found,
	then no switch settings are processed as the ARJ_SW switches.

	SET ARJ_SW=C:\ARJ\ARJ.CFG

	C:\ARJ\ARJ.CFG contains:
	a -jm1 -jt -i1
	l -jp
	e -i1
	c -zcomment.txt

	In the above example, any ARJ "a" commands will use "-jm1 -jt -i1"
	as the ARJ_SW switch options.


     ARJ COMMAND LINE SYNTAX:

	ARJ <command> [-<switch>[-|+|<option>]...] <archive_name>[.ARJ]
	[<base_directory_name>\] [<!list_name>|<path_name>|<wild_name>...]

	Commands and switches can be entered in upper or lower case.
	Switches can be placed anywhere after the command ARJ.

	ARJ supports the use of either "-" or "/" as the switch option
	character.  The first occurrence of either "-" or "/" that ARJ
	encounters in the ARJ_SW variable will determine the switch symbol
	for processing ARJ_SW.	The first occurrence of either "-" or "/"
	that ARJ encounters in the command line will determine the switch
	symbol for processing the command line except when the "-ju" (unix)
	option has been specified in ARJ_SW.  You may NOT mix and match
	switch symbols.  Throughout this document, the symbol "/" may be
	substituted for "-" in switch usage.

	Examples:  ARJ a A:archive *.* /va /r	 is correct
		   ARJ a A:archive *.* /va -r	 IS INCORRECT USAGE!

	Switch options SHOULD NOT be combined.	At this time combinations
	such as "-ki" representing "-k" and "-i" will work, but may not in
	the future.

	The switch option "--" tells ARJ that there are no more switch
	options to process in the current command line.  This is useful
	when you need to enter filenames beginning with "-".
	Example:  ARJ a archive -- -testfile

	The standard ARJ file suffix is ".ARJ".  Subsequent multiple volume
	archives end in ".A01", ".A02", etc, up to .A99, .A00, .A01.

	The ARJ command must be the first non-switch argument after "ARJ".
	The ARJ archive name must be the first filename on the command
	line.  The base directory, if any, must be the second filename
	argument.  The switches and other filenames can be in any order.
	The base directory name should end with "\" (backslash) or ":"
	(colon).  However, ARJ will still accept directory names without
	the "\" character if the directory already exists.

	For commands other than modifying or creating an archive, you can
	specify a wildcard for the archive name such as "*.ARJ".  If you
	also specify the "-r" switch,  ARJ will search sub-directories for
	ARJ archives (*.ARJ) also.

	Example:  ARJ l -r *  will list all of your *.ARJ files.

	Switches specified on the command line will either toggle or
	override switches specified with the ARJ_SW environment variable.
	Switch usage is identical to that of LHARC.

	"-s+"	     turns on switch "s".
	"-s-"	     turns off switch "s".
	"-s"	     toggles the state of switch "s".
	"-sname"     provides the name argument for switch "-s".
	"--"	     skip processing of any more switch options.

	Wild_names follow MS-DOS convention.  "*.*" means all files.
	"*.DOC" means all files with an extension of ".DOC".  "?B*.*"
	means all files with a second character of "B".

	The default for <wild_name> for all commands except for "d" is
	"*.*".

	For the add, move, freshen and update commands, filename matching
	in the archive requires an exact path match depending upon the "-e"
	option.  For non-update commands, specified filenames with paths
	will force a full pathname match.

	You can supply one or more filenames for files containing lists of
	files to be added to an archive.  The filenames must be listed one
	per line with no leading or trailing blanks.  The list filename(s)
	must be prefixed with "!".  If you want to archive a filename
	beginning with !, you must use the "-!" option to set a new list
	file character.

	You can exclude filenames/wildnames from the list of filenames to
	be processed by ARJ.

	Example:  ARJ a software *.* -x*.exe -x*.obj   adds all files
	in the current directory except .EXE and .OBJ files.


     ARJ COMMANDS:

	a: Add files to archive

	   This is the basic command to add disk files to an ARJ archive.
	   You can specify 0 to 64 filename arguments (one can be a
	   destination directory).  The arguments can be wildnames.  If
	   you specify the "-r" switch (recurse subdirectories), ARJ
	   will add all of the files in all of the subdirectories that
	   match the specified wildname.

	   Example:  ARJ a archive subdir\*.*
		     Archive all files in directory "subdir".

	   For maximum compression, use the "-jm" switch option.

	c: Comment archive files

	   This command allows you to comment the header and individual
	   files.  ARJ will prompt you for each comment.  The user will be
	   prompted for up to 25 lines for each comment.  A line containing
	   only a [return] will terminate the comment.

	   The user can elect to input comment data from a file by entering
	   the comment filename preceded by an "!" as in "!archive.txt"
	   starting in column 1 of the first comment line.  This file is
	   read as a text file.  The lines in the text can be up to 2048
	   bytes long.	Only the first 2048 bytes of the file will be
	   accepted by ARJ.

	   To erase a comment from an archive, type [space] [return] on the
	   first comment line and [return] on the second comment line.

	   You may also erase a comment with the following command:
	   "ARJ c archive -zerase.txt"	where erase.txt contains only a
	   [space] and [return].

	   To add only the archive comment and not file comments, use the
	   following command:

	   ARJ c archive -z

	   To add only the archive comment at the command line, use the
	   following command:

	   ARJ c archive -zcomment.txt

	   You may also comment an archive with the "a", "f", "m", "u"
	   commands.

	   ARJ a -zcomment.txt archive *.txt

	d: Delete files from archive

	   This command allows you to delete files from the archive.  When
	   wildcard selection is not suitable, you can use the "-q" switch
	   which causes ARJ to prompt you for deletion for each file
	   selected.

	   Example:  ARJ d archive *.c
		     Delete all files in archive ending in ".c".

		     ARJ d -q archive *.c
		     Prompt before deleting each file ending in ".c".

	e: Extract files from archive

	   This command will extract one or more files from the archive to
	   the current directory or base directory if specified.  ARJ will
	   prompt the user before overwriting existing files unless the
	   user specifies the "-y" switch.  If the user gives a "no"
	   answer, ARJ will prompt for a new filename.	If the user enters
	   a single [return] instead of a filename, ARJ will skip the
	   current file extraction.

	   Example:  ARJ e archive soft\ *.c
		     Extract all files ending in ".c" to subdirectory
		     "soft".

	   When extracting a file located on multiple volumes, ARJ may
	   prompt the user with an "Append? " prompt.  This will usually
	   occur with files split across volumes.  You will also need to
	   specify the "-v" switch to force ARJ to continue to the next
	   volume of a series of volumes.  When extracting from one of a
	   series of multiple volumes on a diskette, it is easier to use
	   the wildcard "*.*" to specify the archive as in:

	   ARJ e archive A:*.* filespecs

	   If you wish to extract only a portion of an archive and that
	   portion is a directory containing directories, you should use
	   the "-p1" switch.  See the "-p" switch for more information.

	   If ARJ encounters a disk full during extraction, ARJ will abort
	   with an error.  You can bypass the abort by using the "-jd"
	   option.  Refer to the description of "-jd" for more
	   information.

	f: Freshen files in archive

	   Update matching files in the archive that are OLDER than the
	   selected disk files.

	   Example:  arj f archive *.c *.h

	   In freshening archives, you should use the same filename
	   specifications that you used to create the archive.

	   Example:  arj a archive \temp\ *.* -r
		     arj f archive \temp\ *.* -r

	   If no files or comments have been added to the archive, ARJ
	   will not rewrite the archive at ARJ 2.20 and above.

	i: check Integrity of ARJ.EXE

	   The "i" command allows the user to check the integrity of the
	   ARJ.EXE program.  ARJ will report CRC ERROR! if the tested ARJ
	   program does not pass its integrity check.  This indicates that
	   the program is probably corrupted.  Please note that the "i"
	   command should not be used on a compressed ARJ executable
	   (DIETed, LZEXEd, etc.), since the "i" command will then ALWAYS
	   report a CRC error.	If the program name is not specified, then
	   ARJ will check the current program being executed.

	   Syntax:  ARJ i ARJ.EXE
		    ARJ i	     at DOS 3.0 and up

	j: Join archives to archive

	   The "j" command allows the user to merge multiple ARJ
	   archives.  You should not use the "o" command to reorder a
	   merged multiple volume archive because of the split files.
	   ARJ expects to find the pieces of a split file in consecutive
	   order.

	   Syntax:  ARJ j archive archive1.arj archive2.arj
		    ARJ j archive *.arj -r

	   Some switches NOT supported by the "j" command are:	-o, -ob,
	   -f, -u, -c, -d.

	   The "-d" option IS suppported by the "j" command.

	   Note that switches that do work like "-x" select the archives to
	   be merged and NOT the contents of the archives.

	   This command can be used to convert an SFX module to a regular
	   ARJ archive.

	   Example:  ARJ j new_name arjsfx.exe

	l: List contents of archive

	   List contents of archive to standard output.  The display can be
	   paused after each screenful with the "-jp" switch.  The files
	   are listed in stored order.	There are no sort options
	   currently.

	   The last field on the display TPMGVX stands for:
	       T -> text/binary/directory type
	       P -> path information available in "V" listing
	       M -> compression method used
	       G -> file has been garbled (encrypted)
	       V -> archive has been continued to another volume
	       X -> this file is an extended portion of a larger file

	   Example:  arj l archive *.c *.h

	   A "+" sign preceding the date-time field indicates that the date
	   is a 21st century date (20nn).

	   The original file size reported by the "l" and "v" commands is
	   the actual number of bytes input during text mode compression.
	   This is usually the MS-DOS file size minus the number of
	   carriage returns in the file, since C text mode strips a file of
	   carriage returns.

	m: Move files to archive

	   This command is similar to specifying the "a" command with the
	   "-d" switch.  The "m" commands adds the selected files to the
	   archive.  If the adds are successful, then the added files are
	   deleted.  The move command does not ask permission before
	   deleting the files.	Use the "ARJ a -d" command for that
	   feature.

	   Example:  ARJ m archive soft\*.*

	   The "m" command when used with "-f" and "-u" will delete any
	   successfully added files as well as any files that are already
	   up to date in the archive.

	n: reName files in archive

	   This command allows you to change the names of the files stored
	   in an ARJ archive.  ARJ will prompt for the new name of each
	   selected file.  You can skip changing the name of a particular
	   file by entering a blank line.

	   Example:  ARJ n archive *.c

	   In the above example, ARJ prompts for new names for all *.c
	   files.

	o: Order files in archive

	   This command allows you to re-order the files within the
	   archive.  You may specify the order of files on the command line
	   or you can use one or more list files.  Any files in the archive
	   that are not specified on the command line or in a list file
	   will be placed at the end of the archive in the same relative
	   order that they were originally.  No wildcard names can be used
	   as order specifications.  The filenames in the list file must be
	   entered one per line.

	   Example:  ARJ o archive file1 file2 file3

	   In the above example, the files "file1", "file2", and "file3"
	   will be ordered first in the archive.  Any remaining files will
	   follow those.

	   Example:  ARJ o archive !list

	   In the above example, the archive will be ordered according to
	   the order of the names in the file "list".

	   IMPORTANT:  For the "o"rder command, the list file option has
	   one special feature.  If the list file is named ARJSORT.$$$, ARJ
	   will expect the file to have been built with the ARJ v -jv1
	   command.  This ARJSORT.$$$ list file may be specified with a
	   pathspec.  See the ARJSORT.BAT batch file for an example of this
	   special feature.

	   To facilitate building list files, the "v" command in ARJ will
	   produce special outputs with the "-jv" switch and the "-jv1"
	   switch.

	   The "-jv" switch will display only the pathnames stored within
	   the archive.  No other listing data is displayed.  This output
	   can be re-directed to a file for manual sorting into a list
	   file.

	   The "-jv1" switch will display the standard verbose display with
	   a few modifications.  No comment field will be displayed.  The
	   pathname is appended to the archive file description data
	   instead of being on a separate line.  Displayed just before the
	   pathname field are the file extension and filename.	These
	   fields are available so that the user can sort the text lines by
	   date-time, file extension, CRC value, etc.  Text editors like
	   Qedit and SLED allow the user to sort text lines via an embedded
	   text field.

	   IMPORTANT:  You should NOT change the order of files in a
	   multiple volume archive.  ARJ expects the first file and the
	   last file in such an archive to have certain flags set.
	   Re-ordering the archive may cause problems with any split files.

	   At ARJ 2.20, you cannot "o"rder a multiple volume archive.

	p: Print files to standard output

	   Output files to standard output.  This function works such that
	   the output file will contain only the file data extracted.  This
	   is important for UNIX-like usage.

	   Example:  ARJ p archive manual.doc > output.fil

	   In the above example, output.fil will be an exact copy of
	   manual.doc.	There will be no extraneous header information in
	   output.fil.	All extraction phase information is written to the
	   STDERR device, which is normally the display screen.

           Example:  ARJ p archive manual.doc > LPT1

           In the above example, the standard output is redirected to the
           printer device.  This does not involve any intermediate disk
           files.

	   The "-jp" option can be used to pause the screen output as in the
	   "s" command.

	   NOTE:  Because of a problem using fwrite() and STDOUT, errors
	   occurring during redirection to serial and printer ports may not
	   be detected.  Errors during redirection to disk files will be
	   detected.

	r: Remove paths from filenames

	   This command causes ARJ to remove the path component from the
	   specified filenames stored in the archive.  The default is all
	   filenames stored in the archive.  This command is useful if you
	   forgot to specify "-e" to exclude paths.

	s: Sample files to screen with pause

	   This command is similar to the "p" command except that one
	   screenful of data is displayed to the user and a user action is
	   then requested.  The action prompt can be suppressed with the
	   "-y" switch.

	   The "s" command filters the text to output by truncating at 79
	   characters per line and displaying '?' for control characters.

	t: Test integrity of archive

	   Test the contents of the selected files for the correct CRC
	   value.  ARJ uses a 32 bit CRC to validate the contents of the
	   files.  The use of 32 bit CRCs is many times better than the
	   use of 16 bit CRCs for the detection of errors.

	   Use this command to fully test the security envelope on an
	   ARJ-SECURED archive.

	u: Update files to archive

	   Update older files in the archive and add files that are new to
	   the archive.

	   Example:  arj u software

	v: Verbosely list contents of archive

	   This command lists the full pathname and comments of the archive
	   files as well as the same information as the "l" command.

	   Use the "-jp" switch to pause the output after each screen.

	   The "-jv" switch will display only the pathnames to the screen.

	   The "-jv1" switch will display the archive data in a manner
	   suitable for sorting on various fields for use with the "o"
	   command.

	w: Where are text strings in archive

	   This option will cause ARJ to prompt the user whether to ignore
	   case when searching.  It will also prompt the user for the
	   number of lines of context of a match to display.  If a number
	   greater than zero is chosen, ARJ will display the matched string
	   and the surrounding context with all of the non-printable
	   characters including newlines replaced by question marks.  The
	   context lines displayed will be 78 characters in length.  When
	   the display context option is chosen, ARJ will inhibit the
	   progress indicator.

	   Then, this command will prompt the user for up to 20 text strings
	   to search for within the archive.  A count of all matches will be
	   displayed after each individual file is scanned.

	   Search strings are limited to 79 characters.

	   Matches that span archive volumes will not be detected by
	   this string search.

	   You can search multiple ARJ archives with a command like:

	   ARJ w \docs\*.arj

	x: eXtract files with full pathname

	   This command extracts one or more files from the archive to
	   their full paths in the current directory or to the base
	   directory if specified.  ARJ normally stores pathnames as if
	   they were children of the target directory.	Any drive or root
	   directory specifications are stripped before extracting unless
	   the "-jf" switch is specified with the "x" command.

	   Example:  arj x archive *.c

	   If you wish to extract only a portion of an archive and that
	   portion is a directory containing directories, you should use
	   the "-p1" switch.  See the "-p" switch for more information.

	   Refer to the description of the "e" command for more
	   information about extraction.


     ARJ SWITCH OPTIONS:

	The letters within the parentheses:

	   (All) - all commands
	   (afu) - add, freshen, update, move commands
	   (Upd) - any command that modifies/updates an archive
	   (ce)  - comment and extract commands
	   (ex)  - extract commands
	   (lv)  - list commands

        ?: Display full help screens

           The command "ARJ -?" displays several screens of help
           information with page pauses.  The command "ARJ -? -jp" displays
           the help screens without page pauses.  You can also redirect the
           output to a file as in:

           ARJ -? > help.txt

           ARJ may not detect network file redirection and will pause per
           screenful.

        -: (All) skip any more switch options

	   The switch option "--" will cause ARJ to stop looking for any
	   more switch options on the command line.  This is useful for
	   entering filenames beginning with "-".

	   Example:  ARJ a archive -- -file

	!: (All) set list char

	   This option allows the user to set the character used for list
	   files.  The option "-!" with no specified character toggles
	   (turns off) the current list file character (default "!").

	   Syntax:  ARJ a archive -!@ @list.fil
		    ARJ a archive -! !.bat

	   The first example above sets the list file character to the one
	   used by LHA and PKZIP.

	$: (auex) add/extract volume label

	   This option allows the user to store or extract DOS volume
	   labels in ARJ archives.  It is possible to have multiple labels
	   in one archive.  At ARJ 2.10, you can only add or extract volumes
	   labels at DOS 2.0 and above.  The "-$" option may be specified
	   with or without a drive specification.  The drive can be
	   specified by appending the letter and optionally the ":" to
	   "-$".  If none is specified, ARJ assumes the current drive
	   unless a specified target base directory has a drive
	   specification.

	   WARNING:  Currently, ARJ allows multiple volume labels and
	   duplicate volume labels in the same archive.  You can delete one
	   or more duplicate labels with the "ARJ d -q archive label"
	   command.  ARJ will query you on each occurrence of "label".
	   This "faulty" mechanism allows a file and label of the same name
	   to be added to an archive.  The capability of having duplicate
	   labels in the same archive MAY NOT be present in future versions
	   of ARJ.

	   The SFX and SFXJR modules DO NOT support volume label extraction!

	   On the list screen, volume labels will be indicated by the "V"
	   under the "T" column.

	   Syntax:  ARJ a archive -$	       add all files and the label
					       of the current drive.
		    ARJ a archive ... -$B      add only the label of drive B
		    ARJ a archive ... -$B:     add only the label of drive B
		    ARJ u archive ... -$B:     add only the label of drive B

	   To extract volume labels, you must select the label by setting
	   "-$" and specifying a matching wildname/filename.

	   Syntax:  ARJ e archive doslabel -$  extract the label named
					       doslabel to the current drive.
		    ARJ e archive -$D:	       extract all files to the
					       current drive and extract the
					       label to drive D:.
		    ARJ e archive label B:\ -$ extract all files to B:\ and
					       the label to drive B.

	   ARJ will display all labels over 8 characters with a "." in it
	   like a normal DOS filename.	ARJ will only create standard
	   uppercase DOS volume labels.

	   Volume labels created by utilities other than standard DOS
	   commands like LABEL and FORMAT may cause label access problems
	   for ARJ.  For example, Norton's VL.EXE can create labels with
	   lowercase letters.  You will need to use LABEL.COM to delete
	   these labels in order to let ARJ set a new label.  Programs that
	   can delete unusual labels have to do absolute writes to disk or
	   use a wildcard ("*.*") delete of files with the label attribute
	   in the root directory.  A single bit corruption in the program
	   can result in the deletion of ALL files in the root.  ARJ
	   currently chooses not to take that risk.

	a: (afu) allow any file Attribute

	   By default ARJ will not select system or hidden files via
	   wildcarding unless the "-a" option is specified.

	   The "-a1" switch causes ARJ to add any directories in the
	   selected set of matching filespecs to the archive being built.
	   This switch also selects hidden and system files as in the "-a"
	   switch.  Even empty directories will be added.  The "l" command
	   will display such directories with a "D" under the "T" (file
	   type) header.

	   Older releases of ARJ will skip over empty directory entries.
	   The ARJSFX and ARJSFXJR modules CAN process empty directory
	   entries.

	   This option is useful for saving software directories with needed
	   empty directories.

	b: (afu) Backup changed files

	   The "-b" switch will select only files that have the archive bit
	   set.

	   If you specify the "-b1" option, files with the archive bit set
	   will be selected and the archive bits of all archived files will
	   be reset after a successful archive has been built.

	   Example:  arj a a:backup1 c:\*.* -b1 -r -va	 simulates BACKUP
	   command.

	   The "-b2" switch does NOT select files.  It causes ARJ to reset
	   the archive bits of added files.  If the "-f" or "-u" option has
	   been selected, ARJ will reset the archive bits of files that are
	   already duplicated in the archive.

	   Example:  arj a e:archive c:\*.* -b2 -r    archives all files on
	   the C drive and resets all archive bits.

	c: (All) skip time-stamp Check

	   Normally with the "u" and "f" commands, ARJ will only update
	   files to an archive which are newer.  The "-c" switch will cause
	   ARJ to update the archive regardless of the date-time modified
	   time stamps.

	   When extracting files from an archive with the "-y" and "-f"
	   switches set, ARJ would normally skip extracting older files.
	   The "-c" switch will force ARJ to extract these older files.

	d: (afu) with Delete (move)

	   This switch provides the standard MOVE command.  Successfully
	   added files will be deleted.  When used with the "-f" or "-u"
	   option, ARJ will also delete files that are already duplicated
	   in the archive.  ARJ will prompt the user before deleting the
	   files unless the "-y" switch is specified.  Also, you can use
	   the "m" command which does not prompt before deleting the files.

	   ARJ a archive filename -d -y       is equivalent to

	   ARJ m archive filename	      and

	   ARJ a archive filename
	   delete filename

	e: (afu) Exclude paths from filenames

	   By default ARJ always stores the pathname of the archived file.
	   This switch will cause ARJ to store only the filename component.

	   The "-e1" switch option causes ARJ to NOT store the base
	   directory name with the filenames in the archive.

	   Example:  ARJ a archive C:\SOFTWARE\ARJ\ *.* -r -e1

	   In the above example, ARJ will NOT store the C:\SOFTWARE\ARJ\ as
	   part of the filenames.

	   When updating files within an archive, ARJ uses the full
	   pathname to match against the full name of the selected files.
	   The "-e" and "-e1" option affect this exact matching.  If "-e"
	   is specified, only the filespecs of the selected files will be
	   matched against the full pathname of the files in the archive.
	   If "-e1" is specified, the full pathname minus the base
	   directory of the selected files is used to match against the
	   full pathname of the files in the archive.

	   In other words, ARJ will only update a file within an archive if
	   the name of the new file as stored in the archive would be
	   identical to the name of the original file stored in the
	   archive.

	f: (All) Freshen existing files

	   This switch used with the "e" or "x" commands causes ARJ to only
	   extract newer files from the archive.

	   This switch used with the "m" command causes ARJ to update only
	   input files with newer dates than the ones in the archive.
	   After the archive has been updated, all updated selected files
	   and all up to date selected files will be deleted.

	   The ARJ m -f command is very similar to the LHARC m command.

	g: (All) Garble with password

	   This switch followed by a password "-gpassword" will encrypt or
	   decrypt an archived file.  During a "l" or "v" command, a
	   garbled file will display an "G" after the method number.

	   Example:  ARJ e archive -gpassword

	   Using the wrong password during extraction will result in a
	   "Bad Huffman code" error message.

	i: (All) with no progress Indicator

	   Do not display the percentage progress indicator.  The progress
	   indicator appears during the add, extract, search, and test
	   operations.

	   The "-i1" option provides a bar type graphical progress
	   indicator for the compression, extraction, and testing type
	   commands of ARJ.  This provides an alternative to the simple
	   numeric increasing percentage progress indicator.

	j: (All) selects alternate set of switch characters.

	   This switch toggles the set of switch characters.  The toggle is
	   reset at end at of each separate switch sequence back to the
	   main set of switch characters.

	   For example, "-ja" is not the same function as "-a".  However,
	   "-jja" is the same as "-a" because of the double toggle.  Also,
	   "-jaje" is NOT the same as "-ja -je".  The switch sequence
	   "-jae" is the same as "-ja -je".

	k: (Upd) Keep archive file backup

	   Backup the original archive file during an update.  The old
	   archive will be suffixed with ".BAK".  Any existing ".BAK" file
	   will be overwritten.

	l: (All) create List_name file

	   This switch will cause ARJ to dump to the filename after the
	   "-l" switch all of the filenames to be processed by this ARJ
	   command.  This list contains all files that matched the file
	   wildnames given on the command line.  Other options do NOT
	   affect the output of filenames to this list file.  To get an
	   index file for backup purposes, use the "-ji" option.

	   This list file can be used as a listfile on the command line.

	   Example:  ARJ a -lname.lst archive *.exe

	   This example will create a file named "name.lst" with all *.exe
	   files.

	m: (afu) with Method 0, 1, 2, 3, 4

	   Method 0 = storing	(no compression)
	   Method 1 = best compression for general use
				(default compression method)
				(requires 282,000 plus bytes memory)
	   Method 2 = slightly less compression and faster
				(requires 282,000 plus bytes memory)
	   Method 3 = less compression and less memory and faster
				(requires 250,000 plus bytes memory)
	   Method 4 = fastest compression
				(requires 235,000 plus bytes memory)

	   Method 2 (-m2) provides an excellent combination of speed
	   and size reduction.

	   Example:  ARJ a archive *.exe -m2

	   The "-jm" option will usually improve the size reduction of
	   methods 1 and 2 at the cost of speed and memory.  The behavior
	   of "-jm" with -m3 and -m4 is UNDEFINED.

	   Method 4 uses a different decoder than 1 to 3.  Method 4 is
	   almost twice as fast as method 1.

	n: (All) only New files (not exist)

	   With the "e" or "x" commands, extract files that do not exist in
	   the target directory.

	   WIth the "a" or "m" commands, archive files that do not exist in
	   the target archive.

	o: (All) On or after date YYMMDDHHMMSS

	   The switch "-o" by itself means select files modified today.  If
	   "-o" is followed by a date and optionally a time, ARJ will only
	   select files modified on or after that date-time.

	   Example:  ARJ a test -o9001021700	means select files modified
	   on or after Jan 2, 1990, 5:00 PM.

	   Years less than "80" will be considered as 21st century years.

	   There is no option for using other date-time formats.

	   The switch "-ob" selects files modified before today.  If "-ob"
	   is followed by a date and optionally a time, ARJ will only
	   select files modified before that date-time.

	p: (All) match using full Pathnames

	   When "-p" is specified, ARJ looks for an exact pathname match.
	   This can be modified by the "-e" option.

	   For non-update commands and specified filenames with paths, ARJ
	   will match the full path with or without the "-p" switch.

	   To match directory paths that contain subdirectories, you should
	   use the "-p1" switch.  This switch sets ARJ to match only the
	   initial portion of the pathnames against the wildnames
	   specified.  For example, if your archive contains the TURBOC++
	   directory named TC and you wish to extract the INCLUDE
	   subdirectory along with the subdirectory INCLUDE\SYS, you can
	   use the following command:

	   ARJ e archive TC\INCLUDE\*.* -p1

	   If you wanted to extract all of the INCLUDE\S*.* files including
	   the contents of the SYS subdirectory, you can use the following
	   command:

	   ARJ e archive TC\INCLUDE\S*.* -p1

	q: (All) Query on each file

	   This switch causes ARJ to prompt the user prior to acting upon
	   each archived file for all but the "j", "l", "t", "v", and "w"
	   commands.  This allows you to selectively delete, add, etc.

	r: (All) Recurse subdirectories

	   This switch will cause ARJ to recurse any wildcards specified on
	   the command line including ARJ archive filenames by traversing
	   all subdirectories scanning for matches.

	   ARJ will also recurse non-wildcard filenames as in:
	   ARJ a archive FILE.BBS -r

	s: (Upd) set archive time-Stamp

	   This switch causes ARJ to set the date-time stamp of the archive
	   to that of the newest file in the archive.

	   This option will also work with non-update commands as in:
	   ARJ l archive -s ...

	   The "-s1" switch is used to keep the old archive date-time
	   stamp.  The new archive will have the same timestamp as the
	   original archive.

	   The "-s2" switch is like the "-s" switch except that it only
	   works for archive modification commands.  This makes it more
	   suitable for use in the ARJ_SW environment variable.

	t: (afu) set file Type

	   This switch causes ARJ to open and read the file to be archived
	   in binary or text mode.  The default is binary mode (-t0).  To
	   archive in text mode, use the -t1 switch.  The "-t" switch is
	   equivalent to "-t0".

	   If you specify the switch "-t0", ARJ will always use the binary
	   mode even for freshening text mode files already in the archive.

	   The file type "text" is only needed for future cross platform
	   transfers of ARJ archives.  It enables ARJ to extract text files
	   to the host file system with the text newline sequence that is
	   correct for that operating system.

	   However, this mode may produce slightly better size reduction.
	   The "-t1" option combined with "-jh65000" can produce some of
	   the best size reduction numbers.  Extraction of files compressed
	   in text mode is significantly slower than the extraction of
	   binary files.

	   DO NOT use the text mode on non-text files!!!  On non-text files
	   ARJ will prematurely stop input if it finds an embedded EOF
	   character (CTL Z).  This will produce a LOSS of data on binary
	   files.  Graphics characters and some printer control characters
	   are considered non-text.  The "-t1" options strips the text to
	   7-bit characters.

	   ARJ will look at the first 4096 bytes of the input file looking
	   for 8-bit non-text data.  If ARJ finds any 8-bit data, it will
	   automatically backtrack and switch to "-t0" (default) binary
	   mode for that particular file.  In addition at the end of
	   compressing the input file, if ARJ finds that the input file
	   size is not greater than 75 percent of the binary file size
	   (size on disk), ARJ will report an error for that input file and
	   increment the error count.  This should help avoid the problem of
	   accidentally compressing executable files with the "-t1" option
	   which results in lost data.	These tests are not foolproof.

	   The original file size reported by the "l" and "v" commands is
	   the actual number of bytes input during text mode compression.
	   This is usually the MS-DOS file size minus the number of
	   carriage returns in the file, since C text mode strips a file of
	   carriage returns.

	u: (All) Update files (new and newer)

	   This switch used with the "e" and "x" commands causes ARJ to
	   extract newer and non-existing files.

	   This switch used with the "m" command causes ARJ to update only
	   input files with newer dates than the ones in the archive and
	   add new files to the archive.  After the archive has been
	   updated, all added files and updated selected files and all up
	   to date selected files will be deleted.

	v: (All) enable multiple Volumes

	   This switch is required to put ARJ into multiple volume mode.

	   This switch allows the creation of multiple volumes in the ADD
	   mode.  The command "arj a a:arjvol \*.* -b -r -v360000" allows a
	   user to backup up all files changed since the last backup to
	   multiple floppy disks.  ARJ will pause between volumes to allow
	   changing disks.  Subsequent volumes will be suffixed .A01, .A02,
	   .A03, ... , .A99, .A00, .A01, etc.

	   Archived files can be split across volumes.	ARJ will try to
	   fill each volume to within 200 to 3000 bytes of specified
	   maximum size.

	   The command "arj x a:arjvol -v" would restore files starting
	   from arjvol.arj.  You must specify the entire ARJ volume name
	   including the .Ann suffix when starting from the middle of a
	   series of volumes.

	   The pauses between volumes can be suppressed with the "-y"
	   switch.  You should not suppress the pauses when archiving to
	   diskettes or extracting from diskettes.  The "-jy" option will
	   allow you to suppress specific types of queries.

	   ARJ x a:arjvol -v -jyco

	   The above example extracts in multiple volume mode and
	   suppresses prompting for permission to create directories and to
	   overwrite existing files.  ARJ will assume yes in these cases.

	   Because of the splitting process, archived split files with a
	   size of zero bytes are possible.  This is not an error.

	   If you comment your archives with long comments, you should take
	   that into account when specifying volume size.  You should
	   specify a smaller volume size during the "a" command before
	   adding the comments.

	   The "-v" switch will accept the abbreviations 360, 720, 1200,
	   and 1440.  These will be translated to 362,000, 730,000,
	   1,213,000, and 1,457,000 bytes, respectively.  Please note that
	   if the available disk space is less than the requested amount,
	   ARJ will prompt the user for permission to continue.

	   You can use the "K" modifier as a shortcut for "000".  For
	   example, 100K means 100000.	"K" does not mean 1024.

	   The "-vv" switch turns on the next volume beep option.  When you
	   select this option, ARJ will sound a beep prior to the next
	   volume.  The "v" modifier must come before any other modifier.

	   The "-va" switch sets the disk space auto-detect option.  ARJ
	   will check for the disk space available on the target directory
	   and try to use all or most of it.  This option is aimed at
	   diskette usage.  Please note that this switch option detects
	   free disk space.  It does not detect formatted disk space.
	   If the space available is less than 10,000 bytes, ARJ will
	   prompt the user for permission to continue.

	   Examples:  ARJ a A:backup -b -va
		      ARJ a backup -v360

	   The switch modifier "s" can be used to make ARJ execute one
	   specified system command prior to each volume or make ARJ pause
	   for manual execution of system commands.  This is useful for
	   purging target diskettes before ARJ writes to them.	The "s"
	   modifier must follow the "a" modifier or the volume size.
	   Optionally, after the "s" modifier, you can specify a system
	   command or batch file name.	ARJ will automatically execute the
	   command or batch file before each volume.  If the command has
	   embedded blanks, then the entire switch option must be
	   surrounded by double quotes.  The system command is executed
	   before ARJ executes the auto-detect space option.

	   Examples:  ARJ a A:backup -vas
		      ARJ a A:backup -vvas
		      ARJ a A:backup -v360s
		      ARJ a A:backup -vv360s
		      ARJ a A:backup -vaspurge.bat
		      ARJ a A:backup -v360sdelete.bat
		      ARJ a A:backup "-vasFORMAT A:"
		      ARJ a A:backup "-vasDIR C:\ "

	   Note that the last example has a space before the last double
	   quote mark.	If the last space is missing, the internal command
	   line parser will make the double quote mark part of the DIR
	   command.

	   Volume archives can be used as stand-alone archives save for the
	   files that are split across volumes.

	   It is recommended that the "-jt" (test archive) option be used
	   with the "-v" switch to ensure perfectly built volumes as it is
	   tedious to retest volumes after they are built.

	   During ARJ operation in non-update commands, ARJ will not abort
	   when it cannot open the correct sequential ARJ volume archive.
	   It will report the open error and proceed to the "Ok to process
	   the next volume?" prompt.  At this point it is possible to swap
	   diskettes to put the correct volume in place.  This feature is
	   disabled if the "-y" option has been specified.

	   For those who have enough free hard disk space, the -v option
	   can be used to make backing up the hard disk fairly easy.  ARJ
	   can be set to create multiple floppy sized volumes on the hard
	   disk for later copy to diskettes.  So even if ARJ is slow, you
	   can fire up an ARJ backup and some time later, you can quickly
	   copy the volumes to floppies.  Below are sample backup commands:

	   arj a backup *.* -b2 -r -v360 -y -jt -js	full backup
	   arj a backup *.* -b1 -r -v360 -y -jt -js	incremental backup

	   See the "-jn" and "-jx" options to see how to recover from an
	   abort in the middle of a backup type operation.

	   WARNING:  Updating multiple volume archives with the "-v" switch
	   set is NOT recommended, especially if the new file sizes are not
	   identical.

	   TIP:

	   To pre-determine the number of diskettes required to archive a
	   set of data, you can take advantage of the "s" option of the
	   "-v" switch.  The "s" option lets you execute a DOS command
	   prior to each volume.  You can specify a command that deletes
	   the previously created archive volume.  This lets you use the
	   same floppy diskette/hard disk space to build the multiple
	   volumes.

	   Example:  ARJ a -r "-vasdel a:volume.a??" -y a:volume c:\*.*

	w: (Upd) assign Work directory

	   By default, ARJ builds a new ARJ archive file in the same
	   directory as the old archive file.  By specifying the "-w"
	   switch, you can specify the working directory where the
	   temporary archive file will be built.  After the temporary
	   archive file is built, it is copied over the original one and
	   deleted.

	   Normally ARJ requires enough disk space for the original archive
	   and the new temporary archive.  Specifying the "-w" switch
	   allows you to move some of that disk space requirement to
	   another directory.

	   If the copy of the temporary archive on top of the original
	   archive fails, you will have to manually do the copy.  ARJ will
	   not delete the temporary archive in this error situation.

	   Example:  ARJ a -we:\temp\ archive *.c

	x: (All) Exclude filenames

	   This switch is used to exclude filenames or wildnames from the
	   list of filenames to be processed.

	   Example:  ARJ a archive soft\*.* -r -x*.exe -x*.obj -xtest

	   This example will archive all files in the soft directory and
	   sub-directories with the exception of any files named "test"
	   or ending in ".exe" and ".obj".

	   You can also specify an exclude file list by preceding the
	   filename with the list character "!".  The exclude file list
	   must contain a list of filenames/wildnames one per line with no
	   leading or trailing blanks.

	   Example:  ARJ a archive soft\*.* -r -x!exclude.lst

	   The "-x" option also allows you to exclude an entire path
	   including subdirectories from being selected for processing.

	   Syntax:  ARJ a archive C:\*.* -xC:\TEMP\

	   The "\" after C:\TEMP indicates to ARJ that everything below
	   C:\TEMP\ is to be excluded.

	   Note that the exclude directory option requires that the
	   directory be specified in the same relative path that the
	   selected files use.

	   Example:

	   arj a archive \temp\*.* -x\temp\firstdir	is correct usage
	   arj a archive \temp\*.* -xC:\temp\firstdir	is NOT correct because
							of the C:

	   The "-x" switch also works for non-update commands like
	   "e"xtract and "l"ist.

	   Examples:

	   arj e archive -x*.exe	   extract all files except *.exe files
	   arj l archive -x*.exe -x*.obj   list all files except *.exe and *.obj

	   A maximum of 8000 filenames or wildnames can be excluded.

	y: (All) assume Yes on all queries

	   Use this switch for batch type uses of ARJ.	This switch
	   disables most of the normal user queries during ARJ execution.
	   Use this switch to suppress overwrite queries in the "e" and "x"
	   commands, to suppress the make new directory query in the "e"
	   and "x" commands, to suppress the new filename prompt when an
	   open file operation fails in the "e" and "x" commands, to
	   suppress the pause during the "s" command and to suppress the
	   next volume pause using the "-v" option.

	   Use this option with due caution, especially during extraction
	   as this sets ARJ to overwrite files.  However, the "-n" option
	   can be used to avoid any overwriting.

	   As an alternative, you can use the "-jy" option which lets you
	   suppress individual types of user queries.

	z: (afuce) supply file for archive comment

	   The "-z" switch has been provided to facilitate batch commenting
	   of ARJ archives with the "c" command.  When the "-z" option has
	   been specified with or without a comment file, ARJ will only
	   process the archive header comment and will skip any file
	   commenting unless the "-jz" switch has been specified.

	   A comment file containing only a single blank can be used to
	   erase comments from ARJ archives.

	   Syntax:  arj c archive -z
		    arj c archive -zcomment.txt
		    arj a archive -zcomment.txt

	   The "-z" option also allows one to dump the ARJ archive header
	   comment to a file.  This will only extract the main archive
	   comment and not the individual file comments.

	   Syntax:  arj e archive ... -zcomment.txt    dumps only the comment
		    arj x archive -zcomment.txt        dumps comment and files

       ja: (All) show ANSI comments

	   Display any ANSI escape sequences unaltered.  By default, escape
	   characters in comments are not displayed.  Not displaying ANSI
	   command is the default because of ANSI BOMBS.  Using ANSI
	   commands, it is possible to redefine the keyboard of users using
	   certain ANSI drivers.  For example, a key could be redefined to
	   "echo y | del \*.*".

       jd: (exlv) ensure free Disk space

	   In extraction mode, this option causes ARJ to always ensure that
	   it will leave the user specified amount of disk space available.
	   ARJ will skip files that would exceed the disk space available
	   limit.  Files that are skipped will each count as an error.	The
	   default free space is zero bytes.

	   Example:  ARJ e archive basedir\ *.doc -jd100K

	   In the above example, ARJ will not extract any files that will
	   cause the disk free space to be less than 100,000 bytes.  The
	   "K" is a synonym for "000".	For example, 100K means 100000.

	   In "l"ist or "v"erbose list mode, this option sets an error
	   check at the end of the listing screen based upon the total of
	   the original sizes of the files selected.  If the total size
	   would exceed the user specified free space limit, ARJ will
	   report an error at the end of the listing screen.

	   Example:  ARJ l archive *.doc -jd10000

	   In this example, ARJ will report an error if the current
	   available disk space minus the total of the *.doc files is less
	   than the specified minimum of 10,000 bytes.

	   Example:  ARJ e archive *.* -jd0

	   In this example, ARJ will skip extraction of any files that
	   would result in a disk full error.

       je: (Upd) create self-Extracting archive

	   This option causes ARJ to create a self-extracting .EXE file
	   instead of an .ARJ file.  This self-extractor is about 15000
	   bytes in size and supports full pathname extraction.  The "-je1"
	   switch creates a smaller self-extracting .EXE file.	The
	   ARJSFXJR module is about 5400 bytes in size.

	   The SFX modules do NOT support multiple volume archives.  That
	   would serve little purpose because you would have to distribute
	   multiple files.  In this case, DEARJ (available to registered
	   users) would serve adequately.  DEARJ supports all of ARJ
	   extraction functionality including multiple volume archives.

	   At ARJ 2.10, the SFX executable modules are pre-compressed using
	   LZEXE.  This may cause false indications with EXE scanning
	   programs showing that an ARJ SFX archive is a LZEXE compressed
	   file. Only the executable header module is LZEXE compressed.
	   The actual archive is ARJ compressed, of course.  The LZEXE
	   header is modified to avoid extraction by UNLZEXE type programs.
	   UNLZEXE will truncate an ARJ self-extractor of its archive.

	   The current commands ARJSFX supports are:

	   Usage: ARJSFX [-command] [-switch(s)] [directory\] [file(s)]

	   Commands:
	   e: Extract files	       v: Verbosely list contents
	   l: List contents	       x: eXtract files with pathname (default)
	   t: Test contents

	   Switches:
	   a: show ANSI comments       n: only New files (not exist)
	   c: skip time stamp Check    p: match with Pathname
	   f: Freshen existing files   u: Update files (new + newer)
	   g: unGarble with password   y: assume Yes on queries

	   NOTE!!!  ARJSFX uses the "-" character before all commands and
	   switches.  This is to allow extraction of files named e, l, etc.

	   The default ARJSFX command is "-x" extract files with pathnames.
	   When extracting pathnames, ARJSFX will prompt for permission to
	   create new directories unless the "-y" option is specified.
	   ARJSFX will create absolute or relative directories depending
	   upon whether the root directory has been stored in the pathname
	   in the archive.  Saving the root is done using the "-jf" option.

	   To avoid extracting to paths, the archive creator should use the
	   "-e" option to exclude path specs.  The user extracting the SFX
	   module can specify the "-e" command to extract to the current
	   directory.

	   ARJSFX does not support compression method 4.

	   The ARJSFX module supports the ARJ-SECURITY envelope feature by
	   itself.  The ARJ-SECURITY feature is only available as a
	   licensed option.  It is intended as a feature for software
	   developers.

	   ARJ will create a self-extracting module without an intermediate
	   archive file.

	   Example:  ARJ a software *.* -je

	   If you want to make a self-extracting module from an ARJ
	   archive, use the freshen command with a non-existent filename
	   argument such as "...".  In this case, ARJ will report the
	   self-extractor created with 0 file(s).  The 0 file(s) indicates
	   that no files were modified during the self-extractor creation.

	   Example:  ARJ f software ... -je

	   IMPORTANT:  When executing an ARJSFX module on a system with the
	   CONSOLE device set to RAW mode, the ARJSFX module will abort on
	   user input to avoid hanging the system.  Use of the "-y" switch
	   on the command line will avoid the problem.

	   Example:  ARJ220 -y

	   The ARJSFXJR module created with the "-je1" switch is a
	   stripped-down version of ARJSFX.  ARJSFXJR does not accept any
	   command line options.  It does not support method 4 or text mode
	   "-t1" or garbled "-g" archives.  An ARJSFXJR module containing
	   files with pathnames will extract to the paths.  ARJSFXJR will
	   automatically create directories as needed to build the paths.

	   Example:  ARJ f software ... -je1

	   Both the ARJSFX and ARJSFXJR modules will by default extract to
	   relative/absolute path specs if the archive contains
	   relative/absolute path specs.

	   More examples:

	   Build an SFX module with absolute pathnames for extraction to
	   the absolute pathnames:

	   ARJ a -r -je -jf DISTRIB \product\*.*

	   The user need only type "DISTRIB -y" to automatically recreate
	   the "product" directory on the current drive.

	   Build an SFX module with relative pathnames for extraction to
	   relative pathnames:

	   ARJ a -r -je DISTRIB \product\*.*

	   The user need only type "DISTRIB -y" to automatically recreate
	   the "product" subdirectory in the current directory.

	   Build an SFX module with relative pathnames for extraction to
	   relative pathnames excluding the base directory:

	   ARJ a -r -e1 -je DISTRIB \product\	*.*

	   The user need only type "DISTRIB -y" to automatically recreate
	   the files and subdirectories of the "product" directory in the
	   current directory.

	   Build an SFXJR module with filenames (no path specs).

	   ARJ a -e -je1 DISTRIB \product\*.*

	   The user need only type "DISTRIB" to automatically extract the
	   entire contents of "DISTRIB.EXE" to the current directory.

       jf: (afux) store/use Full specified path

	   Normally, ARJ will strip all pathnames of drive letter and root
	   symbol.  This switch disables this action.  When extracting with
	   the "x" command from an archive that was built with this switch,
	   ARJ will normally strip any drive letter and root symbol, unless
	   the "-jf" option is specified again.

	   The "-jf1" option will strip only the drive spec and NOT the root
	   symbol.  You can use either the "-jf" or "-jf1" option during
	   extraction to force use of the root directory.

       jh: (afu) set Huffman buffer size

	   ARJ has a default static Huffman buffer size of 16384 bytes.
	   This buffer size is better for compressing executable files.
	   The buffer size in ARJ 0.15 and earlier was set to 65500 bytes.
	   That size is better for large text files.  You may specify a
	   buffer size from 2048 to 65535 bytes.

	   Example:  ARJ a archive *.txt -jh65500

       ji: (afu) set Index filename

	   The "-ji" switch is used to create an index file containing the
	   filenames archived.	This is especially helpful when using ARJ
	   to do multiple floppy type archives.  This file SHOULD NOT be
	   created on the floppy diskette if the floppy diskette is changed
	   during the archival process.

	   If the index file already exists, ARJ will append data to it.

	   The index file contains two types of text lines.  The first type
	   is the volume name record.  It contains the date, time, starting
	   file position, and the archive name.  The second type is the
	   filename record.  It contains only the filename.

	   This information is also useful for restarting "-v" multiple
	   volume archives.  You need the filename and the starting file
	   position.

       jk: (Upd) Keep temp archive on error

	   When the "-jk" switch has been specified, ARJ will keep the
	   temporary archive during an aborted archive build/update.  During
	   a failed build, ARJ will modify the temporary archive to make it
	   useable by removing the broken portion.

       jl: (afuetx) display only filespecs

	   The "-jl" option sets ARJ to display only the filespec of a
	   filename during the progress displays.  This will simplify the
	   display output.

       jm: (afu) set Maximum compression

	   The "-jm" switch sets the maximum compression mode.	This mode
	   changes both method 1 and method 2 to the maximum compression for
	   those methods.  This may increase compression time significantly.

	   You can get a 1 to 8 percent improvement in compression with
	   ARJ -m1 -jm.

	   The "-jm1" option provides slightly less compression than "-jm"
	   at a faster speed.  This can range from slightly faster to much
	   faster.

	   Usage of "-jm" with "-m3" or "-m4" is NOT to be relied on.

       jn: (afu) set restart Name

	   The "-jn" switch is used to restart interrupted multiple volume
	   archives in conjunction with the "-jx" switch.  All selected files
	   are skipped up to but not including the named file.

	   Example:  ARJ a volume -v360 -r -jn\BIN\TREE.COM -jx1230

	   In the above example, all files scanned up to \BIN\TREE.COM are
	   skipped.  Archiving will start at file position 1230 of file
	   \BIN\TREE.COM.

	   IMPORTANT!!!  The exact name of the starting file must be specified
	   according to the wildnames/filespecs specified.  This name is the
	   same as displayed by the Adding filename display and the same as
	   written to the "-ji" index file.  Please note that \DOS\TREE.COM is
	   not considered the same as DOS\TREE.COM with this option.

       jo: (am)  query when updating file

	   The "-jo" switch is used to query the user when using the ARJ "a"
	   or "m" commands to add files to an archive.	Before ARJ
	   overwrites an existing internal archive file when using "-jo",
	   ARJ will query the user with "Update <filename>? ".	Without this
	   option, ARJ will overwrite the internal archive file without
	   querying.

       jp: (lv)  Pause after each screenful

	   This switch will cause ARJ to pause after listing each screenful
	   of data for the "l", "p", and "v" commands.	Press the ENTER key
	   to continue the listing.  You can also enter "quit" to exit ARJ.

	   In one special case, "ARJ -? -jp", the use of the -jp switch
	   toggles page pauses off, because by default in help mode,
	   pausing is on.

       jr: (All) Recover broken archive files

	   This switch is used to access headers and files in an archive
	   that has been corrupted either with bad data or missing data.
	   This switch lets ARJ find the next valid header for listing,
	   extraction or testing.  ARJ will continue to look for headers
	   until it finds the end of file.  At that point ARJ will print an
	   error message stating that it encountered the end of file
	   unexpectedly.  This is to be expected.

	   If file header data has been corrupted, ARJ will be unable to
	   recover any file data associated with that header.  If file data
	   has been corrupted, ARJ will abort but not delete any extracted
	   file data.  To continue recovering from such a corrupted
	   archive, simply specify one filename to extract at a time or use
	   the "-q" query switch to prompt for individual files.

	   Example:  ARJ e archive -jr -q

       js: (afu) Store archives by suffix

	   This switch is used to force ARJ to store and not compress files
	   with the following extensions: .ARJ, .ZIP, .LZH, .PAK, .ARC.

	   The file extensions can be specified as follows:

	   ARJ a archive -js.zoo.ice.gif

	   The above command will store files with extensions ending in
	   .ZOO, .ICE, and .GIF.  This overrides the defaults.

	   You can use the environment variable ARJ_SW to set up your own
	   defaults as follows:

	   set arj_sw = -js.arj.zip.lzh -js-

	   The "-js-" turns off the option by default so that when you
	   specify the "-js" switch on the command line, ARJ will already
	   know what extensions you want to store.

       jt: (Upd) Test temporary archive

	   This switch causes ARJ to execute an archive integrity check on
	   the intermediate temporary archive before overwriting any
	   pre-existing original archive.  If any error occurs, ARJ will
	   not overwrite the original archive.	When used with the "-w"
	   switch option, ARJ will also test the final archive file as well
	   as the temporary archive before deleting any input files.

	   Example:  ARJ m archive *.c -jt

       ju: (All) translate UNIX style paths

	   This switch causes ARJ to translate any subsequently encountered
	   pathnames to MS-DOS style from UNIX style.  This switch also
	   causes translation of filenames entered as a result of ARJ
	   prompts such as in comment filenames.

	   Example:  ARJ a archive -ju /soft/*.c

       jv: (All) set Verbose display

	   This switch sets ARJ to display more information during the
	   "t"est, "l"ist, and "ex"tract commands.

	   Example:  ARJ t archive -jv

	   The "-jv" switch causes the "v" command to display only the
	   pathnames to the screen.

	   The "-jv1" switch causes the "v" command to display the archive
	   data in manner suitable for sorting on various fields.

       jw: (ex)  set extract output filename

	   The "-jw" option allows you to specify the name of the
	   extraction output file.  You should only select one file to
	   extract when using this option.

	   This is similar but not exactly the same as using the "p"
	   command with DOS output redirection.  Using DOS redirection would
	   cause all of the output of the extraction to be put into the
	   output file.  Using "-jw" would cause ARJ to prompt for
	   overwrite permission per each file extracted to the output file.

       jx: (All) start at eXtended position

	   This switch is used to continue a file on another archive
	   manually.  This switch is normally for use when a multiple
	   volume "a" command has aborted.

	   Example:  ARJ a arjvol.a01 manual.doc -jx100000

	   This example archives manual.doc starting from file byte
	   position 100000 and on.

	   In extraction mode, this sets ARJ to extract a file to an output
	   file at a specified starting position.

	   Example:  ARJ e -jx2000000 archive file1

	   This example extracts the file "file1" to file1 starting at
	   position 2000000 or at the end of the file.

	   This is similar to using the command "ARJ p archive >> output".
	   To duplicate this redirection with ARJ would require the following:

	   ARJ e -jx2000K -jwoutput archive

       jy: (All) set individual Yes flags

	   This switch is used to suppress individual ARJ user prompts.

	   Syntax:  ARJ e archive -jy<flags>

	   where <flags> is one or more of the following characters:
	   a, c, d, k, n, o, s, v.  ARJ will assume YES for each flag
	   selected.

	   A - skip append query during a multi-volume extraction
	   C - skip create directory query
	   D - skip delete files query
	   K - skip disk space availability query
	   N - skip new filename prompt
	   O - skip overwriting existing file query
	   R - erase all typeahead before prompting
	   S - skip scanned enough text query
	   V - skip ok to proceed to next volume query
	   Y - accept single character Y/N/A/Q inputs

	   Example:  ARJ x volume -v -jyaco
		     suppress append, create, and overwrite prompts.

	   You may set the "-jyyr" option in the environment variable
	   ARJ_SW.

       jz: (c) supply file for file comment

	   The "-jz" switch has been provided to facilitate batch
	   commenting of one or more files within an ARJ archive.  Only one
	   comment file can be specified.  That file will be used to
	   comment each file specified on the command line.

	   A comment file containing only a single blank can be used to
	   erase comments from ARJ archives.

	   Syntax:  arj c archive file1 -jzcomment.txt
		    arj c archive file1 -zheader.cmt -jzfile.cmt


     ARJ_SECURITY ENVELOPE:

	The ARJ-SECURITY ENVELOPE feature provides a facility similar to
	other archivers.  This feature disallows any type of modification,
	even commenting, to an ARJ-SECURED archive by ARJ.  Moreover, there
	are additional internal checks to determine if the ARJ-SECURED
	archive has been modified in any way.  This feature is intended for
	use by software developers who distribute their software in
	archived format and is only available for a special fee.  However,
	there can be no guarantee that this mechanism cannot be defeated.

	In normal use, ARJ will display one of two messages when processing
	an archive with a valid ARJ-SECURITY envelope.	ARJ will either
	state that the archive MAY have a valid ARJ-SECURITY envelope or
	that the archive HAS a valid ARJ-SECURITY envelope.  ARJ can only
	be sure that the envelope is valid when the "t", "e", or "x"
	command is executed on ALL of the archived files.  In order to
	fully test the security envelope of an archive, use the "t" command
	as in "ARJ t archive".

	If the security envelope has been tampered with or the archive has
	suffered data corruption, ARJ will display a message stating that
	the security envelope has been violated.


     KNOWN ARJ ISSUES/PROBLEMS:

	When using a working directory, ARJ does not check for disk space
	before overwriting the original archive.  Be sure you have enough
	space before updating an archive using the "-w" switch.

	Because of a bug with extended archive header processing, you
	should convert to ARJ 2.10 and above as soon as practical.  This
	bug is NOT a current problem because no version of ARJ supports the
	use of the extended header.

	There is a reported problem using ARJ and floppy disk drives when
	using the disk cache program SUPER PCKWIK 3.30 with advanced
	diskette support (/D+).  The system will occasionally hang when ARJ
	attempts to read/write the diskette.  Disabling the SUPER PCKWIK
	option with /D- appears to remove this problem.  Other programs
	have similar problems with this feature of SUPER PCKWIK.  Other
	cache programs like PC-TOOLS PC-CACHE 5.5 and 6.0 do not have this
	problem with ARJ.


     ARJ TECHNICAL SUPPORT:

	I have received many useful suggestions from users all over the
	world.	Many of those suggestions are in this version or will be
	incorporated in later versions of ARJ.

	I will try to resolve software problems with ARJ as they are made
	known to me.  Please notify me of any ARJ problems by mail, email
	or via the ARJ support BBSes mentioned below.  Despite the fact
	that ARJ is free for many users, I will strive to make ARJ a
	robust, stable and useful product for all users.

	To ensure a reply when using the postal system, please enclose a
	stamped self-addressed envelope with your correspondence.  Keeping
	up with the ARJ mail has become expensive.  Foreign corresponders
	should include currency or postal coupons instead of stamps.
	Otherwise, I may be unable to answer your correspondence.

	Your financial support is needed for the ARJ archiver and format to
	succeed.


     ARJ AVAILABILITY:

	The latest version of ARJ can be obtained from the following
	sources:

	ARJ SUPPORT BBSes:  See ARJ_BBS.DOC

	ARJ is available from a number of other BBS's, but I can only vouch
	for the integrity of the archive if the ARJ220.EXE verifies its
	ARJ-SECURITY envelope as valid.  If no security envelope exists,
	then the data has been re-archived and there is no assurance of
	data integrity.

	If none of the above sources are suitable, you may order a copy of
	the latest version of ARJ directly from the author.

	Send a check or money order for five dollars (US) to cover the
	costs of shipping and handling for U.S. delivery.  For foreign
	delivery, send ten dollars (US) to cover shipping and handling.
	Please specify diskette size (3.5 or 5.25 inch);  otherwise, a 5.25
	inch diskette will be shipped.	Please allow a few weeks for
	delivery, longer for foreign deliveries.

	Robert Jung, 2606 Village Road West, Norwood, Massachusetts 02062


     DISTRIBUTORS:

	The following are my authorized distributors for ARJ:

	In Germany:

	C.A.T. Kommunikations-System	   Internet: arj@cat.de
	Systemberatung A. Dunkel	     SubNet: arj@cat.sub.org
	Robert-Schuman-Ring 37		    FidoNet: 2:243/12
	D 6239 Kriftel, Germany 	    Mailbox: (06192) 42054 (2400 Baud)
						     (06192) 42057 (19200 PEP)
						NUA: 45619270055


     ACKNOWLEDGEMENTS:

	LHARC is the name of an archiver by Haruyazu Yoshizaki.
	PKZIP and ZIP are trademarks of PKWare, Inc.
	PAK is trademark of NoGate Consulting.

	I wish to express my gratitude to Haruyasu Yoshizaki (Yoshi) for
	developing LHARC and distributing its source code.  LHARC gave me
	the impetus to start studying data compression.  I also wish to
	thank Haruhiko Okumura for providing additional ideas.	His AR001
	and AR002 program provided the basic design for the early versions
	of ARJ.  Much has happened to the ARJ design since then.  In fact,
	only a small percentage of ARJ is derived from AR source code.	The
	most important part of ARJ, the LZ77 compression routine, is new
	and original.

	I also wish to thank Fabrice BELLARD for LZEXE which is used to
	squish the ARJ SFX modules.

	I wish to thank those who have helped in the development of ARJ.
	Those include Ron Freimuth, Michael Lawler, Arkady Kleyner, Joseph
	Teller, Mike McCombs, Brian Godette, Robb Hufalt, Axel Dunkel,
	Alexander Pruss, and Jonathan Forbes.  And to the many others who
	have helped or provided messages of support, THANKS!

	I wish to thank my wife, Susan, and my son, Timothy, for putting up
	with this ARJ obsession for the last several months.  Without their
	encouragement and support, ARJ would never have come to be.

	But my greatest thanks goes to Almighty God for His inspiration and
	great salvation.


     USAGE AND DISTRIBUTION POLICY:

	See LICENSE.DOC file for license policy.

	ARJ, REARJ, ARJSFX, and ARJSFXJR contain no DES technology or any
	other government protected technology.	As far as I can determine,
	ARJ, REARJ, ARJSFX, and ARJSFXJR may be exported and used outside
	the U.S. and Canada.


     FINAL COMMENTS:

	I do hope that you find this program as useful as I have.  I would
	appreciate any suggestions to improve this archiver.


	I can be reached at:

        Robert Jung at Channel One BBS      (617) 354-8873
        Join the mailbox conference with "j mailbox" to send email to me.

        Robert Jung at Bay State BBS        (617) 598-6646

	Robert Jung at The Black Depths BBS (508) 427-5379

	Robert Jung at FIDONET address:  1:16/390.7

	Robert Jung in the COMPRESS (ILINK), LHARC / COMPRESSIONS
	(SMARTNET), SHARE (RIME) or ARCHIVERS (RELAYNET) echo conferences.

	2606 Village Road West
	Norwood, Massachusetts 02062

	Internet address:  robjung@world.std.com

	Compuserve users can enter   >INTERNET: robjung@world.std.com
	at the "Send to" prompt.  I prefer CompuServe users to send mail
	to this address as opposed to my CompuServe userid below.

	CompuServe userid: 72077,445  (Checked once or twice a week)


     End of document

